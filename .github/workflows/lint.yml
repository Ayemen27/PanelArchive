# ==================== GitHub Actions: Linting & Formatting ====================
# فحص جودة الكود والتنسيق تلقائياً

name: Lint & Format

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run Flake8 lint
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=120 --statistics
    
    - name: Check code formatting with Black
      run: |
        black --check --diff --color . --extend-exclude="/(pyenv|BTPanel|class|class_v2|data|install|logs|mod|plugin)/"
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff . --skip-glob="pyenv/*" --skip-glob="BTPanel/*" --skip-glob="class/*" --skip-glob="class_v2/*" --skip-glob="data/*" --skip-glob="install/*" --skip-glob="logs/*" --skip-glob="mod/*" --skip-glob="plugin/*"
  
  format:
    name: Auto-format (on main only)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install formatting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort
    
    - name: Auto-format with Black
      run: |
        black . --extend-exclude="/(pyenv|BTPanel|class|class_v2|data|install|logs|mod|plugin)/"
    
    - name: Auto-sort imports with isort
      run: |
        isort . --skip-glob="pyenv/*" --skip-glob="BTPanel/*" --skip-glob="class/*" --skip-glob="class_v2/*" --skip-glob="data/*" --skip-glob="install/*" --skip-glob="logs/*" --skip-glob="mod/*" --skip-glob="plugin/*"
    
    - name: Commit changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git diff --quiet && git diff --staged --quiet || git commit -m "style: auto-format code with black & isort"
        git push
      continue-on-error: true
